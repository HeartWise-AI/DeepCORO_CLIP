command:
  - torchrun
  - "--nproc_per_node=2"
  - "--master_port=29501"
  - "scripts/main.py"
  - "--base_config"
  - "config/deepcoro_clip/clip/base_config_x3d_m.yaml"
  - ${args}

name: "DeepCORO_Clip_Sweep_Single_Video"
project: "DeepCORO_Clip_Sweep_Single_Video"
entity: "mhi_ai"

method: bayes

metric:
  name: val/loss
  goal: minimize

parameters:
  lr:
    distribution: log_uniform_values
    min: 0.00001
    max: 0.0002

  optimizer:
    values: [RAdam, AdamW]

  scheduler_name:
    values: ["linear_warmup", "cosine_with_warmup", "cosine_with_hard_restarts_with_warmup"]

  loss_name:
    values: ["siglip_ddp"]

  model_name:
    values: ["x3d_m"]

  temperature:
    distribution: uniform
    min: 0.02
    max: 0.15

  num_warmup_percent:
    values: [0.05, 0.1, 0.15]

  dropout:
    distribution: uniform
    min: 0.05
    max: 0.25

  video_freeze_ratio:
    values: [0.5, 0.6, 0.7, 0.8, 0.9, 1.0]

  text_freeze_ratio:
    values: [0.8, 0.9, 1.0]

  num_heads:
    values: [2, 4, 8]

  aggregator_depth:
    values: [1, 2, 3, 4]

  rand_augment:
    values: [true]

  gradient_accumulation_steps:
    values: [1, 2]

  batch_size:
    values: [64, 96]

  max_grad_norm:
    values: [1.0, 2.0]

  frames:
    values: [32, 48]

  apply_mask:
    values: [false]

  tag:
    values: ["x3d_m_pretrained"]

  name:
    values: ["DeepCORO_Clip_Sweep_Single_Video"]

  project:
    values: ["DeepCORO_Clip_Sweep_Single_Video"]

  entity:
    values: ["mhi_ai"]

  video_weight_decay:
    distribution: log_uniform_values
    min: 1e-7
    max: 1e-4

  text_weight_decay:
    distribution: log_uniform_values
    min: 1e-7
    max: 1e-6

early_terminate:
  type: hyperband
  min_iter: 3
  eta: 2
  s: 2
