command:
  - torchrun
  - "--nproc_per_node=2"
  - "--master_port=29500"
  - "scripts/main.py"
  - "--base_config"
  - "config/linear_probing/CardioSyntax/base_config_multiview_score_syntax_new.yaml"
  - ${args}
name: "DeepCORO_video_linear_probing_cardio_syntax"
project: "DeepCORO_video_linear_probing_cardio_syntax"
entity: "mhi_ai"
method: bayes
metric:
  name: best_val_loss
  goal: minimize
parameters:
  # CLS Token specific parameters
  pooling_mode:
    values: ["cls_token", "attention+cls_token"]
  use_cls_token:
    values: [true]
  num_attention_heads:
    values: [8, 16, 24]
  separate_video_attention:
    values: [true]
  normalization_strategy:
    values: ["post_norm", "pre_norm"]
  
  # Separate attention learning rates
  attention_within_lr:
    distribution: uniform
    min: 0.0005
    max: 0.005
  attention_across_lr:
    distribution: uniform
    min: 0.0005
    max: 0.003
  attention_within_weight_decay:
    distribution: uniform
    min: 0.000001
    max: 0.0001
  attention_across_weight_decay:
    distribution: uniform
    min: 0.000001
    max: 0.0001

   # Standard parameters
  aggregate_videos_tokens:
    values: [false]
  batch_size:
    values: [6, 8, 10]  # Smaller batches for hybrid pooling
  dropout:
    distribution: uniform
    min: 0.05
    max: 0.25
  dropout_attention:
    distribution: uniform
    min: 0.1
    max: 0.3
  entity:
    values: ["mhi_ai"]
  factor:
    distribution: uniform
    min: 0.1
    max: 0.7

  # Head learning rates - using dot notation for dictionary parameters
  head_lr.syntax:
    distribution: uniform
    min: 0.00005
    max: 0.0002  # Lower for hybrid pooling
  head_lr.syntax_right:
    distribution: uniform
    min: 0.00005
    max: 0.0002  # Lower for hybrid pooling
  head_lr.syntax_left:
    distribution: uniform
    min: 0.00005
    max: 0.0002  # Lower for hybrid pooling
  head_lr.syntax_category:  
    distribution: uniform
    min: 0.00005
    max: 0.0002  # Lower for hybrid pooling
  head_lr.syntax_left_category:
    distribution: uniform
    min: 0.00005
    max: 0.0002  # Lower for hybrid pooling
  head_lr.syntax_right_category:
    distribution: uniform
    min: 0.00005
    max: 0.0002  # Lower for hybrid pooling
  # Head weight decay - using dot notation for dictionary parameters
  head_weight_decay.syntax:
    distribution: uniform
    min: 0.0000001
    max: 0.00001
  head_weight_decay.syntax_left:
    distribution: uniform
    min: 0.0000001
    max: 0.00001
  head_weight_decay.syntax_category:
    distribution: uniform
    min: 0.0000001
    max: 0.00001
  head_weight_decay.syntax_left_category:
    distribution: uniform
    min: 0.0000001
    max: 0.00001
  head_weight_decay.syntax_right_category:
    distribution: uniform
    min: 0.0000001
    max: 0.00001
  attention_hidden:
    values: [128, 256, 512]
  head_weight_decay.syntax_right:
    distribution: uniform
    min: 0.0000001
    max: 0.00001
  lr_step_period:
    values: [4, 6, 8]

  # Other parameters
  name:
    values: ["DeepCORO_video_linear_probing_cardio_syntax"]
  num_videos:
    values: [2, 3, 4]
  num_warmup_percent:
    distribution: uniform
    min: 0.02
    max: 0.15
  optimizer:
    values: [AdamW, RAdam]
  per_video_pool:
    values: [false, true]
  project:
    values: ["DeepCORO_video_linear_probing_cardio_syntax"]
  scheduler_name:
    values: ["linear_warmup", "cosine_with_warmup", "cosine_with_hard_restarts_with_warmup"]
  stride:
    values: [1, 2, 3]
  video_encoder_lr:
    distribution: uniform
    min: 0.00005
    max: 0.0001
  video_encoder_weight_decay:
    distribution: uniform
    min: 0.0000001
    max: 0.000001
  video_freeze_ratio:
    distribution: uniform
    min: 0.7
    max: 1.0
early_terminate:
  type: hyperband
  min_iter: 3
  eta: 2
  s: 2
run_mode: train