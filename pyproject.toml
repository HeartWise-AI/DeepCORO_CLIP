[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "deepcoro_clip"
version = "0.1.0"
description = "Deep learning model for angiogram video interpretation using contrastive learning"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Robert Avram", email = "robert.avram.md@gmail.com" }
]
dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    "wandb>=0.18.0",
    "moviepy==1.0.2",
    "imageio>=2.33.0",
    "imageio-ffmpeg==0.4.8",
    "numpy>=2.2.0",
    "pandas>=2.0.0",
    "pyyaml>=6.0.0",
    "tqdm>=4.65.0",
    "pillow==10.3.0",
    "proglog==0.1.10",
    "setuptools==78.1.1",
    "decorator>=4.0.2",
    "opencv-python>=4.8.0",
    "av>=10.0.0",
    "ffmpeg-python>=0.2.0", # Python bindings for FFmpeg
    "ffmpeg>=1.4",
    "pip>=25.0.1",
    "tabulate>=0.9.0",
    "pydicom>=3.0.1",
    "matplotlib>=3.10.0",
    "zarr>=2.18.3",
    "pytest",
    "pytest-cov",
    "opencv-python-headless>=4.11.0.86",
    "scikit-learn>=1.6.1",
    "seaborn>=0.13.2",
    "pyarrow>=19.0.1",
]

[project.optional-dependencies]
dev = [
    "black>=23.3.0",
    "ruff>=0.0.270",
    "mypy>=1.3.0",
    "pre-commit>=3.3.3",
]

[tool.black]
line-length = 98
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 98
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E402",  # module level import not at top of file
    "B904",  # within an except clause, raise from err
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "timm.*",
    "transformers.*",
    "wandb.*",
    "tqdm.*",
]
ignore_missing_imports = true

[tool.hatch.build.targets.wheel]
packages = ["utils", "models", "scripts", "config"]

[tool.hatch.metadata]
requires-external = [
    "ffmpeg",  # Required system package
]
